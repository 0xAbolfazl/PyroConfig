name: Fetch V2RAY Configs

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours
  workflow_dispatch:  # Manual trigger option

jobs:
  update-configs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Updated to v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install telethon

    - name: Create channels.json if not exists
      run: |
        if [ ! -f channels.json ]; then
          echo '{"all_channels" : ["@Alpha_V2ray_Iran", "@prrofile_purple", "@iMTProto", "@v2rayargon"]}' > channels.json
        fi

    - name: Create necessary directories
      run: mkdir -p Configs Logs

    - name: Run Telegram Bot
      env:
        SESSION_STRING: ${{ secrets.SESSION_STRING }}
        API_ID: ${{ secrets.API_ID }}
        API_HASH: ${{ secrets.API_HASH }}
        CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
      run: python main.py

    # Commit config files to make them publicly accessible
    - name: Commit and push important configs
      if: success()  # Only run if previous steps succeeded
      run: |
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "github-actions@users.noreply.github.com"
        
        # Add only main config files
        git add Configs/vless.txt || echo "vless.txt not found"
        git add Configs/vmess.txt || echo "vmess.txt not found" 
        git add Configs/trojan.txt || echo "trojan.txt not found"
        git add Configs/shadowsocks.txt || echo "shadowsocks.txt not found"
        git add Configs/proxies.txt || echo "proxies.txt not found"
        
        # Check for changes before committing
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ“¦ Auto-update configs [skip ci] $(date +'%Y-%m-%d %H:%M')"
          git push
          echo "Configs updated successfully"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Save log files as artifact for debugging (private)
    - name: Upload logs as artifact
      uses: actions/upload-artifact@v4  # Updated to v4
      with:
        name: debug-logs
        path: |
          Logs/
        retention-days: 3  # Keep logs for 3 days only